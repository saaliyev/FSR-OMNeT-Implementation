[General]
network = fsr.src.FSR
output-vector-file = results/vectors.vec
output-scalar-file = results/scalars.sca
seed-set = ${repetition}
repeat = 1 # Keep at 1 for quick testing, change to >30 for final campaign
sim-time-limit = 3000s # Simulation runs for 300 seconds (5 minutes)

# --- Primary Testing Parameters ---
# Use fixed values for initial testing to get a stable scenario.
# Network size:
FSR.numNodes = 25 # Start with a small network size

# Simulation area dimensions (e.g., 1000x1000 meters as in the paper).
# Moved these definitions here so they are directly available.
FSR.playgroundX = 1000m
FSR.playgroundY = 1000m

# Mobility parameters (Random Waypoint Model)
# Default values from FSRNode.ned are used if not specified here.
FSR.node[*].maxSpeed = 20mps
FSR.node[*].minSpeed = 10mps
FSR.node[*].pauseTime = 1s # Moderate mobility for testing

# Link capacity (via transmission range for our conceptual model)
FSR.node[*].transmissionRange = 250m # Good default for 1000x1000m area

# FSR-specific parameters
FSR.node[*].fsrUpdateInterval = 1.0s # Frequent updates for closest scope
FSR.node[*].numFisheyeScopes = 3     # As in the paper

# Offered load (placeholder, traffic generation will be added later)
# FSR.traffic.numSessions = 1 # Example: small traffic for testing
# FSR.traffic.packetInterarrivalTime = exponential(2.5s) # Poisson traffic
# FSR.traffic.packetSize = 512B

# --- Configurations for Different Scenarios (commented out for initial testing) ---

#[Config FSR_Base]
# Basic configuration, other configs will extend this one.
# Initial placement of nodes: random.
# FSR.node[*].x = uniform(0m, FSR.playgroundX)
# FSR.node[*].y = uniform(0m, FSR.playgroundY)
# Set node IDs automatically.
# FSR.node[*].myId = index
# Set the FSR-specific parameters (already in General for initial test)
# FSR.node[*].fsrUpdateInterval = 1.0s
# FSR.node[*].numFisheyeScopes = 3

#[Config SmallNetworkLowMobility]
#extends = FSR_Base
#FSR.numNodes = 25
#FSR.node[*].pauseTime = 30s # Low mobility

#[Config LargeNetworkHighMobility]
#extends = FSR_Base
#FSR.numNodes = 100
#FSR.node[*].pauseTime = 1s # High mobility

#[Config TrafficScenario1]
#extends = FSR_Base
